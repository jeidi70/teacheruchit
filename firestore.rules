rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Функция для проверки аутентификации
    function isAuthenticated() {
      return request.auth != null;
    }

    // Функция для проверки владельца документа
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Правила для коллекции users
    match /users/{userId} {
      // Разрешаем чтение только аутентифицированным пользователям
      allow read: if isAuthenticated();
      
      // Разрешаем создание документа при регистрации
      allow create: if isAuthenticated() 
        && request.resource.data.keys().hasAll(['phoneNumber', 'createdAt', 'lastLogin'])
        && request.resource.data.phoneNumber is string
        && request.resource.data.createdAt is timestamp
        && request.resource.data.lastLogin is timestamp;
      
      // Разрешаем обновление только владельцу
      allow update: if isOwner(userId)
        && (!request.resource.data.diff(resource.data).affectedKeys()
            .hasAny(['phoneNumber', 'createdAt']));
    }

    // Правила для других коллекций
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 